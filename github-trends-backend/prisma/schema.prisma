generator client {
  provider = "prisma-client-js"
  binaryTargets = ["debian-openssl-3.0.x", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Question {
  id                          String   @id @default(uuid())
  questionContent             String   @db.Text
  title                      String   @db.VarChar()
  bigQuerySql                String   @db.Text
  structuredQueryPlanSchema  Json?
  type                       String   @default("user") @db.VarChar()
  createdAt                  DateTime @default(now())
  updatedAt                  DateTime @updatedAt
  
  result                     QuestionResult?
  jobMetadata                JobMetadata[]
  questionRequests           QuestionRequest[]
  
  @@map("questions")
}

model JobMetadata {
  id                         String   @id @default(uuid())
  questionId                 String
  bullJobId                  String   @unique  // Reference to Redis Bull job
  status                     String   @default("pending")
  failedReason              String?
  createdAt                  DateTime @default(now())
  updatedAt                  DateTime @updatedAt
  
  question                   Question @relation(fields: [questionId], references: [id], onDelete: Cascade)
  
  @@map("job_metadata")
}

model QuestionResult {
  id                         String   @id @default(uuid())
  questionId                 String   @unique
  result                     Json
  createdAt                  DateTime @default(now())
  updatedAt                  DateTime @updatedAt
  
  question                   Question @relation(fields: [questionId], references: [id], onDelete: Cascade)
  
  @@map("question_results")
}

/// This model uses pgvector; Prisma treats vector as Unsupported.
model QueryExample {
  id              String   @id @default(uuid()) @db.Uuid
  title           String
  prompt_text     String   @db.Text
  sql_snippet     String   @db.Text
  chart_hint      String?  @db.Text
  tags            String[] @db.Text
  embedding       Unsupported("vector")
  embedding_model String
  created_at      DateTime @default(now())
  updated_at      DateTime @default(now())

  @@map("query_examples")
}

model QuestionRequest {
  id          String   @id @default(uuid())
  questionId  String
  source      String?  @db.VarChar()
  createdAt   DateTime @default(now())

  question    Question @relation(fields: [questionId], references: [id], onDelete: Cascade)

  @@index([questionId, createdAt])
  @@map("question_requests")
}